# -*- coding: utf-8 -*-
"""perceptron.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vBkRx3zcZqLB5_Zuq6uHAsPLXGc655Hl
"""

from bagging_classifier import BaggingFromScratch
from sklearn.datasets import load_wine
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import BaggingClassifier
from sklearn.preprocessing import LabelEncoder
import numpy as np

# Load dataset and filter classes
wine = load_wine()
mask = wine.target != 0
X = wine.data[mask][:, [wine.feature_names.index('alcohol'), wine.feature_names.index('od280/od315_of_diluted_wines')]]
y = LabelEncoder().fit_transform(wine.target[mask])

x_train, x_test, y_train, y_test = train_test_split(X, y, stratify=y, test_size=0.2, random_state=1)

bag = BaggingFromScratch(n_estimators=500)
bag.fit(x_train, y_train)

print(f"Train Accuracy: {accuracy_score(y_train, bag.predict(x_train)):.3f}")
print(f"Test Accuracy:  {accuracy_score(y_test, bag.predict(x_test)):.3f}")