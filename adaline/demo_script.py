# -*- coding: utf-8 -*-
"""perceptron.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vBkRx3zcZqLB5_Zuq6uHAsPLXGc655Hl
"""

import numpy as np
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris
from sklearn.preprocessing import StandardScaler

from adaline_gd import AdalineGD
from adaline_sgd import AdalineSGD
from utils import plot_decision_region

# Load and prepare data
iris = load_iris()
mask = (iris.target == 0) | (iris.target == 1)
X = iris.data[mask][:, [0, 2]]
y = iris.target[mask]

scaler = StandardScaler()
X_std = scaler.fit_transform(X)

perm = np.random.permutation(len(X_std))
X_std, y = X_std[perm], y[perm]

# Train models
model_gd = AdalineGD(eta=0.01, n_iter=15, random_state=1)
model_gd.fit(X_std, y)

model_sgd = AdalineSGD(eta=0.01, n_iter=15, random_state=1)
model_sgd.fit(X_std, y)

# Visualize decision boundaries
plt.figure(figsize=(12, 5))

plt.subplot(1, 2, 1)
plot_decision_region(X_std, y, model_gd)
plt.title("Adaline - GD")

plt.subplot(1, 2, 2)
plot_decision_region(X_std, y, model_sgd)
plt.title("Adaline - SGD")

plt.tight_layout()
plt.savefig("adaline_decision_boundaries.png")
plt.show()

# Plot losses
plt.figure()
plt.plot(model_gd.losses_, label="GD", marker="o")
plt.plot(model_sgd.losses_, label="SGD", marker="s")
plt.xlabel("Epoch")
plt.ylabel("Loss")
plt.legend()
plt.title("Loss Curves")
plt.grid(True)
plt.savefig("adaline_loss_curves.png")
plt.show()