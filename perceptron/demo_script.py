# -*- coding: utf-8 -*-
"""perceptron.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vBkRx3zcZqLB5_Zuq6uHAsPLXGc655Hl
"""

# demo_script.py
# Perceptron Classifier Demo on Iris Dataset

import numpy as np
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris
from perceptron import perceptron 
from utils import plot_decision_region

# Load and prepare data
iris = load_iris()
mask = (iris.target == 0) | (iris.target == 1)
X = iris.data[mask][:, [0, 2]]  # Sepal length & petal length
y = iris.target[mask]

# Shuffle data
perm = np.random.permutation(len(X))
X, y = X[perm], y[perm]

# Train perceptron
clf = perceptron(eta=0.01, n_iter=10)
clf.fit(X, y)

# Plot decision boundary
plot_decision_region(X, y, clf)
plt.xlabel("Sepal Length")
plt.ylabel("Petal Length")
plt.title("Decision Boundary (Perceptron)")
plt.show()

# Plot error over epochs
plt.plot(range(1, len(clf.errors_) + 1), clf.errors_, marker='o')
plt.xlabel("Epoch")
plt.ylabel("Number of Misclassifications")
plt.title("Training Error Over Time")
plt.show()
