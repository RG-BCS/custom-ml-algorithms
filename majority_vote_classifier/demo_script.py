# -*- coding: utf-8 -*-
"""perceptron.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vBkRx3zcZqLB5_Zuq6uHAsPLXGc655Hl
"""

from sklearn.model_selection import train_test_split
from sklearn.datasets import load_iris
from sklearn.preprocessing import LabelEncoder, StandardScaler
from sklearn.pipeline import make_pipeline
from sklearn.linear_model import LogisticRegression
from sklearn.tree import DecisionTreeClassifier
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import roc_auc_score
from majority_vote_classifier import MajorityVoteClassifier

# Load and prepare dataset
iris = load_iris()
X, Y = iris.data[50:, [1, 2]], iris.target[50:]
le = LabelEncoder()
y = le.fit_transform(Y)
x_train, x_test, y_train, y_test = train_test_split(X, y, stratify=y, random_state=1)

# Base classifiers
clf1 = make_pipeline(StandardScaler(), LogisticRegression(C=0.001, random_state=1))
clf2 = DecisionTreeClassifier(max_depth=1, criterion='entropy', random_state=1)
clf3 = make_pipeline(StandardScaler(), KNeighborsClassifier(n_neighbors=2))

# Majority Vote Ensemble
mv_clf = MajorityVoteClassifier(classifiers=[clf1, clf2, clf3])

# Fit and evaluate
mv_clf.fit(x_train, y_train)
y_pred = mv_clf.predict(x_test)
score = roc_auc_score(y_test, mv_clf.predict_proba(x_test)[:, 1])

print(f"ROC AUC Score (Majority Vote): {score:.3f}")