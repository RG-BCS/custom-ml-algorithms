# -*- coding: utf-8 -*-
"""perceptron.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vBkRx3zcZqLB5_Zuq6uHAsPLXGc655Hl
"""

"""
demo_script.py

This script demonstrates the usage of the custom KNNClassifier implemented in knn.py
and compares its performance with scikit-learn's implementation on the Breast Cancer dataset.
"""

from knn import KNNClassifier
from sklearn.datasets import load_breast_cancer
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.neighbors import KNeighborsClassifier

def main():
    # Load dataset
    X, y = load_breast_cancer(return_X_y=True)

    # Train/test split
    x_train, x_test, y_train, y_test = train_test_split(X, y, test_size=0.2, stratify=y, random_state=42)

    # Standard scaling
    scaler = StandardScaler()
    x_train = scaler.fit_transform(x_train)
    x_test = scaler.transform(x_test)

    # Custom KNN
    custom_knn = KNNClassifier(n_neighbors=3, metric='euclidean')
    custom_knn.fit(x_train, y_train)

    # Scikit-learn KNN for reference
    sklearn_knn = KNeighborsClassifier(n_neighbors=3, metric='euclidean')
    sklearn_knn.fit(x_train, y_train)

    # Display results
    print("üîç Evaluation on Breast Cancer Dataset")
    print("-" * 45)
    print(f"Custom KNN       ‚Üí Train: {custom_knn.score(x_train, y_train):.4f}, Test: {custom_knn.score(x_test, y_test):.4f}")
    print(f"scikit-learn KNN ‚Üí Train: {sklearn_knn.score(x_train, y_train):.4f}, Test: {sklearn_knn.score(x_test, y_test):.4f}")

if __name__ == "__main__":
    main()